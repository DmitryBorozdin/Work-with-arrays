//Дан одномерный массив. Написать программу, которая:
// 1) Смещает этот массив на заданное пользователем количество шагов вправо (влево), а освободившиеся элементы в начале(в конце) обращает в ноль
// 2) Смещает этот массив право(влево), а "упавшие" элементы из "хвоста" массива должны "упасть" в другой массив с той же стороны
// 3) Смещает этот массив вправо(влево) и "упавшие" элементы из "хвоста" перемещает в начало(конец) этого же массива, не меняя порядок(получается своеобразная "змейка")
#include <iostream>
using namespace std;
const int N = 100;   //размер массива
int r;    // шаг смещения
int arr[N]; //исходный массив
int arr1[N];//второй массив
int arr5[N];//если не объявить этот массив, то одна маленькая деталь не будет работать, хоть этот массив вообще нигде не используется(я не смог найти причину:(  )
int a, b = 0;             // b - дополнительная переменная
void Vpravo();
void Vlevo();
void Hvost_vo_vtoroy_massiv_sprava();
void Hvost_vo_vtoroy_massiv_sleva();
void Zmeyka_vpravo();
void Zmeyka_vlevo();
int main() {
	setlocale(LC_ALL, "Russian");
	cout << "Первый пункт задачи" << endl;
	cout << "Введите шаг смещения: ";          
	cin >> r;                               //ввод шага смещения
	if (r > N) {
		cout << "Ошибка, слишком большой шаг" << endl;           //дополнительное условие величины шага смещения
		system("pause");
		return 0;
	}
	for (int i = 1; i <= N; i++) {    //генерация второго массива
		arr1[i] = 0;
	}
	cout << "В какую сторону сместить? 0 - влево, 1 - вправо: ";        //условие смещения
	cin >> a;                                                           
	if (a >= 2 || a < 0) {
		cout << "Ошибка" << endl;
		system("pause");
	}
	if (a == 1) {           //смещение вправо
		cout << endl << "Исходный массив:" << endl << endl;
		for (int i = 1; i <= N; i++) {              //генерация исходного массива
			arr[i] = i;                        
			cout << arr[i] << " ";
		}
		cout << endl << endl;
		Vpravo();
		Hvost_vo_vtoroy_massiv_sprava();
		Zmeyka_vpravo();
		system("pause");
	}
	else if (a == 0) {        //смещение влево
		cout << endl << "Исходный массив:" << endl << endl;
		for (int i = 1; i <= N; i++) {          //генерация исходного массива
			arr[i] = i;
			cout << arr[i] << " ";
		}
		cout << endl << endl;
		Vlevo();
		Hvost_vo_vtoroy_massiv_sleva();
		Zmeyka_vlevo();
		system("pause");
	}
}

void Vpravo() {                                        //функция смещения исходного массива влево
	cout << "Сдвинутый вправо массив:" << endl << endl;
	if (r < 0) {                        //дополнительное условие для шага смещения
		cout << "error";
	}
	else {
		for (int i = 1; i <= N; i++) {           //смещение изначального массива на "r" шагов вправо и вывод его на экран
			if (i <= r) {
				arr[i] = 0;
			}
			else {
				arr[i] = arr[i] - r;
			}
			cout << arr[i] << " ";
		}
	}
	cout << endl << endl;
}

void Vlevo() {                                            //функция смещения исходного массива влево
	cout << "Сдвинутый влево массив:" << endl << endl;
	if (r < 0) {                                             //дополнительное условие для шага смещения
		cout << "error";
	}
	else {
		for (int i = 1; i <= N; i++) {           //смещение изначального массива на "r" шагов влево и вывод его на экран
			if (i >= N - r + 1) {
				arr[i] = 0;
			}
			else {
				arr[i] = arr[i] + r;
			}
			cout << arr[i] << " ";
		}
	}
	cout << endl << endl;
}

void Hvost_vo_vtoroy_massiv_sprava() { //функция перемещения хвоста исходного массива при смещении вправо
	cout << "Хвост массива:" << endl << endl;
	int arr2[N];                                   //создание дополнительного массива
	for (int i = 1; i <= N; i++) {             //генерация дополнительного массива
		arr2[i] = i;
	}
	for (int i = 1; i <=N; i++) {
		if (i >= N - r + 1 && i <= N) {
			arr1[i] = arr2[N - b];                   //перемещение хвоста исходного массива во второй массив и вывод его на экран
			cout << arr1[i] << " ";
			b++;                         // b - дополнительная переменная
		}
		else if (i < N - r + 1) {
			arr1[i] = 0;
			cout << arr1[i] << " ";
		}
	}
	cout << endl << endl;
}

void Hvost_vo_vtoroy_massiv_sleva() {          //функция перемещения хвоста исходного массива при смещении влево
	cout << "Хвост массива:" << endl << endl;
	int arr2[N];                                   //создание дополнительного массива
	for (int i = 1; i <= N; i++) {             //генерация дополнительного массива
		arr2[i] = i;
	}
	for (int i = 1; i <= N; i++) {
		if (i >= 1 && i <= r) {
			arr1[i] = arr2[r-b];                   //перемещение хвоста исходного массива во второй массив и вывод его на экран
			cout << arr1[i] << " ";
			b++;                          // b - дополнительная переменная
		}
		else if (i < N - r + 1) {
			arr1[i] = 0;
			cout << arr1[i] << " ";
		}
	}
	cout << endl << endl;
}

void Zmeyka_vpravo() {                                 //функция перемещения хвоста сдвинутого массива в его начало
	cout << "Змейчатый массив:" << endl << endl;
	b = 0;
	for (int i = 1; i <= N; i++) {            // перемещение хвоста сдвинутого массива в начало и вывод этого массива на экран
		if (i >= 1 && i <= r) {
			arr[i] = arr1[N - b];
			cout << arr[i] << " ";
			b++;
		}
		else {
			cout << arr[i] << " ";
		}
	}
	cout << endl << endl;
}

void Zmeyka_vlevo() {                                  //функция перемещения хвоста сдвинутого массива в его конец
	cout << "Змейчатый массив:" << endl << endl;
	b = r;
	for (int i = 1; i <= N; i++) {      // перемещение хвоста сдвинутого массива в конец и вывод этого массива на экран
		if (i >= N - r + 1 && i <= N) {
			arr[i] = arr1[b];
			cout << arr[i] << " ";
			b--;
		}
		else {
			cout << arr[i] << " ";
		}
	}
	cout << endl << endl;
}
